{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Setup Git Hooks",
      "type": "shell",
      "command": "${workspaceFolder}/setup-hooks.sh",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": false,
        "close": true
      },
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "Run all pre-commit hooks",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/run-in-env.sh pre-commit run --all-files",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run mypy",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/run-in-env.sh mypy",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": {
        "owner": "mypy",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^(.+):(\\d+): (error|warning|note): (.+)$",
          "file": 1,
          "line": 2,
          "severity": 3,
          "message": 4
        }
      }
    },
    {
      "label": "Check Implementation Quality",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/check-implementation.sh",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new",
        "clear": true
      },
      "problemMatcher": [
        {
          "owner": "ruff",
          "fileLocation": [
            "relative",
            "${workspaceFolder}"
          ],
          "pattern": {
            "regexp": "^(.+):(\\d+):(\\d+): ([A-Z]\\d+) (.+)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "code": 4,
            "message": 5
          }
        },
        {
          "owner": "mypy",
          "fileLocation": [
            "relative",
            "${workspaceFolder}"
          ],
          "pattern": {
            "regexp": "^(.+):(\\d+): (error|warning|note): (.+)$",
            "file": 1,
            "line": 2,
            "severity": 3,
            "message": 4
          }
        }
      ],
      "detail": "Run ruff and mypy checks on implementation code only"
    },
    {
      "label": "Run coverage",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/run-in-env.sh coverage run -m pytest && ${workspaceFolder}/scripts/run-in-env.sh coverage report",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run coverage report",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/run-in-env.sh coverage run -m pytest && ${workspaceFolder}/scripts/run-in-env.sh coverage report -m",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Fix markdown formatting",
      "type": "shell",
      "command": "/Users/bflood/projects/scripts/fix-markdown.sh",
      "args": [
        "${workspaceFolder}"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "detail": "Comprehensive markdown formatting using shared script (Prettier + markdownlint)"
    },
    {
      "label": "Format and Lint Markdown",
      "type": "shell",
      "command": "/Users/bflood/projects/scripts/fix-markdown.sh",
      "args": [
        "${workspaceFolder}"
      ],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "detail": "Format and lint markdown files using shared script (Prettier + markdownlint)"
    }
  ]
}
